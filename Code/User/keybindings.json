// Dave's IntelliJ Visual Studio Code Keybindings
// https://github.com/davestephens/vscode-intellij-keymap
[
    /*---------------------------------------------------------------*\
        * Editing
    \*---------------------------------------------------------------*/
    {
        "key": "ctrl+space",
        "mac": "ctrl+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && editorTextFocus && !editorReadonly",
        "intellij": "Basic code completion (the name of any class, method or variable)"
    },
    /*
    {
        "key": "ctrl+shft+space",
        "mac": "ctrl+shft+space",
        "command": "",
        "when": "",
        "intellij": "Smart code completion (filters the list of methods and variables by expected type)",
        "todo": "N/A"
    },
*/
    // {
    //     "key": "ctrl+shift+enter",
    //     "mac": "cmd+shift+enter",
    //     "command": "acceptSelectedSuggestion",
    //     "when": "editorFocus && suggestWidgetVisible",
    //     "intellij": "Complete statement"
    // },
    {
        "key": "ctrl+p",
        "mac": "cmd+p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus",
        "intellij": "Parameter info (within method call arguments)"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen",
    },
    {
        "key": "alt+v",
        "mac": "alt+space",
        "command": "editor.action.previewDeclaration",
        // "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor",
        "intellij": "Open quick definition lookup"
    },
    {
        "key": "alt+f",
        "mac": "ctrl+j",
        "command": "editor.action.revealDefinition",
//        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor",
//        "command": "editor.action.showHover",
//        "when": "editorTextFocus",
        "intellij": "Quick documentation lookup"
    },
    {
        "key": "alt+d",
        "mac": "cmd+o",
        "command": "workbench.action.showAllSymbols",
        "intellij": "Go to class",
        "todo": "not only class"
    },
    // {
    //     "key": "alt+shift+/",
    //     "command": "breadcrumbs.focus",
    //     "when": "breadcrumbsPossible"
    // },
/*
    {
        "key": "ctrl+mouseover",
        "mac": "cmd+mouseover",
        "command": "",
        "when": "",
        "intellij": "Brief Info",
        "todo": "N/A"
    },
*/
/*     {
        "key": "ctrl+b",
        "mac": "cmd+b",
        "command": "editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus",
        "intellij": "Go to declaration"
    },
 */
    {
        "key": "ctrl+f12",
        "mac": "cmd+f12",
        "command": "workbench.action.gotoSymbol",
        "when": "editorTextFocus",
        "intellij": "File structure popup"
    },
    {
        "key": "ctrl+/",
        "mac": "cmd+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Comment/uncomment with line comment"
    },
/*     {
        "key": "ctrl+numpad_divide",
        "mac": "cmd+numpad_divide",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Comment/uncomment with line comment"
    }, */
    {
        "key": "ctrl+shift+/",
        "mac": "cmd+alt+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Comment/uncomment with block comment"
    },
/*     {
        "key": "ctrl+alt+numpad_divide",
        "mac": "cmd+alt+numpad_divide",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Comment/uncomment with block comment"
    }, */
    // {
    //     "key": "alt+enter",
    //     "mac": "alt+enter",
    //     "command": "editor.action.quickFix",
    //     "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly",
    //     "intellij": "Show intention actions and quick-fixes"
    // },
    {
        "key": "ctrl+shift+l",
        "mac": "cmd+alt+l",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly",
        "intellij": "Reformat code"
    },
    {
        "key": "ctrl+shift+l",
        "mac": "cmd+alt+l",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentFormattingProvider && editorHasSelection && editorTextFocus && !editorReadonly",
        "intellij": "Reformat selected code"
    },
    {
        "key": "ctrl+x",
        "mac": "cmd+x",
        "command": "editor.action.clipboardCutAction",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Cut current line or selected block to clipboard"
    },
    {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "editorTextFocus",
        "intellij": "Copy current line or selected block to clipboard"
    },
    {
        "key": "ctrl+v",
        "mac": "cmd+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Paste from clipboard"
    },
    {
        "key": "ctrl+l",
        "mac": "cmd+backspace",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Delete line at caret"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Delete line at caret"
    },
    {
        "key": "ctrl+j",
        "mac": "ctrl+shift+j",
        "command": "editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Smart line join"
    },
    {
        "key": "shift+ctrl+enter",
        "command": "lineBreakInsert",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Smart line split"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Start new line"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Start new line before current"
    },
    {
        "key": "ctrl+delete",
        "mac": "alt+delete",
        "command": "deleteWordRight",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Delete to word end"
    },
    {
        "key": "ctrl+backspace",
        "mac": "alt+backspace",
        "command": "deleteWordLeft",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Delete to word start"
    },
    {
        "key": "ctrl+=",
        "mac": "cmd+=",
        "command": "editor.unfold",
        "when": "editorFocus",
        "intellij": "Expand code block"
    },
/*     {
        "key": "ctrl+numpad_add",
        "mac": "cmd+numpad_add",
        "command": "editor.unfold",
        "when": "editorFocus",
        "intellij": "Expand code block"
    }, */
    {
        "key": "ctrl+-",
        "mac": "cmd+-",
        "command": "editor.fold",
        "when": "editorFocus",
        "intellij": "Collapse code block"
    },
/*     {
        "key": "ctrl+numpad_subtract",
        "mac": "cmd+numpad_subtract",
        "command": "editor.fold",
        "when": "editorFocus",
        "intellij": "Collapse code block"
    }, */
    {
        "key": "ctrl+shift+=",
        "mac": "cmd+shift+=",
        "command": "editor.unfoldAll",
        "when": "editorFocus",
        "intellij": "Expand all"
    },
/*     {
        "key": "ctrl+shift+numpad_add",
        "mac": "cmd+shift+numpad_add",
        "command": "editor.unfoldAll",
        "when": "editorFocus",
        "intellij": "Expand all"
    }, */
    {
        "key": "ctrl+shift+-",
        "mac": "cmd+shift+-",
        "command": "editor.foldAll",
        "when": "editorFocus",
        "intellij": "Collapse all"
    },
/*     {
        "key": "ctrl+shift+numpad_subtract",
        "mac": "cmd+shift+numpad_subtract",
        "command": "editor.foldAll",
        "when": "editorFocus",
        "intellij": "Collapse all"
    }, */
    {
        "key": "ctrl+w",
        "mac": "cmd+w",
        "command": "workbench.action.closeActiveEditor",
        "intellij": "Close active editor tab"
    },
    {
        "key": "ctrl+r",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+e",
        "mac": "ctrl+g",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus || terminalFocus",
        "intellij": "Add selection for Next Occurrence"
    },
    {
        "key": "alt+e",
        "mac": "ctrl+shift+g",
        "command": "cursorUndo",
        "when": "editorTextFocus",
        "intellij": "Unselect Occurrence"
    },
    {
        "key": "alt+b",
        "command": "editor.action.toggleColumnSelection",
        "when": "editorFocus"
    },
    /*---------------------------------------------------------------*\
        * Search/Replace
    \*---------------------------------------------------------------*/
    {
        "key": "shift+alt+f",
        "command": "filesExplorer.findInFolder"
    },
    /*---------------------------------------------------------------*\
        * Usage Search
    \*---------------------------------------------------------------*/
    {
        "key": "alt+f7",
        "mac": "alt+f7",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor",
        "intellij": "Find usages"
    },
    /*
    {
        "key": "ctrl+f7",
        "mac": "cmd+f7",
        "command": "",
        "when": "editorTextFocus",
        "intellij": "Find usages in file",
        "todo": "N/A"
    },
*/
    /*
    {
        "key": "ctrl+shift+f7",
        "mac": "cmd+shift+f7",
        "command": "",
        "when": "",
        "intellij": "Highlight usages in file",
        "todo": "N/A"
    },
*/
    /*
    {
        "key": "ctrl+alt+f7",
        "mac": "cmd+alt+f7",
        "command": "",
        "when": "editorTextFocus",
        "intellij": "Show usages",
        "todo": "N/A"
    },
*/
    /*---------------------------------------------------------------*\
        * Compile and Run
    \*---------------------------------------------------------------*/
    {
        "key": "ctrl+f9",
        "mac": "cmd+f9",
        "command": "workbench.action.tasks.build",
        "intellij": "Make project (compile modifed and dependent)"
    },
    {
        "key": "ctrl+shift+f9",
        "mac": "cmd+shift+f9",
        "command": "workbench.action.tasks.configureDefaultBuildTask"
    },
    {
        "key": "f9",
        "mac": "ctrl+alt+r",
        "command": "workbench.action.tasks.runTask",
        "intellij": "Select configuration and run"
    },
    {
        "key": "alt+9",
        "command": "workbench.action.tasks.reRunTask",
    },
    /*
    {
        "key": "shift+f10",
        "mac": "ctrl+r",
        "command": "",
        "intellij": "Run",
        "todo": "N/A"
    },
*/
    // {
    //     "key": "f5",
    //     "mac": "ctrl+d",
    //     "command": "workbench.action.debug.start",
    //     "when": "!inDebugMode",
    //     "intellij": "Debug"
    // },
    /*
    {
        "key": "ctrl+shift+f10",
        "mac": "ctrl+shift+r",
        "command": "",
        "intellij": "Run context configuration from editor",
        "todo": "N/A"
    },
*/
    /*---------------------------------------------------------------*\
        * Debugging
    \*---------------------------------------------------------------*/
    {
        "key": "alt+f8",
        "mac": "alt+f8",
        "command": "workbench.debug.action.toggleRepl",
        //"when": "inDebugMode",
        "intellij": "Evaluate expression"
    },
    {
        "key": "alt+f8",
        "mac": "alt+f8",
        "command": "editor.debug.action.selectionToRepl",
        //"when": "inDebugMode && editorTextFocus && editorHasSelection",
        "when": "editorTextFocus && editorHasSelection",
        "intellij": "Evaluate expression (selection)"
    },
    {
        "key": "ctrl+f8",
        "mac": "cmd+f8",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus",
        "intellij": "Toggle breakpoint"
    },
    {
        "key": "ctrl+shift+f8",
        "mac": "cmd+shift+f8",
        "command": "workbench.view.debug",
        "intellij": "View breakpoints",
        "todo": "show all debug"
    },
    /*---------------------------------------------------------------*\
        * Navigation
    \*---------------------------------------------------------------*/
    {   "key": "ctrl+shift+x",
        "command": "references-view.find",
        // "when": "editorHasReferenceProvider"
    },
    {
        "key": "ctrl+`",
        "mac": "cmd+shift+o",
        "command": "workbench.action.quickOpen",
        "intellij": "Go to file"
    },
    {
        "key": "ctrl+escape",
        "command": "workbench.action.quickOpen",
        "intellij": "Go to file"
    },
    {
        "key": "ctrl+g",
        "mac": "cmd+l",
        "command": "workbench.action.gotoLine",
        "intellij": "Go to line"
    },
    {
        "key": "alt+left",
        "mac": "alt+left",
        "command": "workbench.action.navigateBack",
        "intellij": "Navigate back"
    },
    {
        "key": "alt+right",
        "mac": "alt+right",
        "command": "workbench.action.navigateForward",
        "intellij": "Navigate forward"
    },
    {
        "key": "alt+shift+left",
        "command": "editsHistory.moveCursorToPreviousEdit",
        "intellij": "Navigate to last edit location",
        "todo": "N/A"
    },
    {
        "key": "alt+shift+right",
        "command": "editsHistory.moveCursorToNextEdit",
        "intellij": "Navigate to last edit location",
        "todo": "N/A"
    },
    {
        "key": "shift+alt+down",
        "mac": "shift+alt+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Move Statement Down"
    },
    {
        "key": "shift+alt+up",
        "mac": "shift+alt+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Move Statement Up"
    },
    {
        "key": "ctrl+shift+down",
        "mac": "cmd+shift+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Copy Statement Down"
    },
    {
        "key": "ctrl+shift+up",
        "mac": "cmd+shift+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Copy Statement Up"
    },
    {
        "key": "shift+f2",
        "mac": "shift+f2",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly",
        "intellij": "Rename"
    },
    /*---------------------------------------------------------------*\
        * General
    \*---------------------------------------------------------------*/
    {
        "key": "alt+1",
        "mac": "cmd+1",
        "command": "workbench.view.explorer",
        // "when": "editorFocus",
        "intellij": "Open corresponding tool window (Explorer)"
    },
    {
        "key": "alt+2",
        "mac": "cmd+2",
        // "command": "workbench.view.search",
        "command": "search.action.focusSearchList",
        "when": "!searchViewletFocus",
        "intellij": "Open corresponding tool window (Search)"
    },
    {
        "key": "alt+2",
        "when": "searchViewletFocus",
        "command": "workbench.action.openNextRecentlyUsedEditor",
    },
    {
        "key": "alt+3",
        "mac": "cmd+3",
        "command": "workbench.view.scm",
        // "when": "editorFocus",
        "intellij": "Open corresponding tool window (Git)"
    },
    {
        "key": "alt+4",
        "mac": "cmd+4",
        "command": "workbench.view.debug",
//        "when": "editorFocus",
        "intellij": "Open corresponding tool window (Debug)"
    },
    {
        "key": "alt+5",
        "mac": "cmd+5",
        "command": "workbench.view.extensions",
    },
    { "key": "alt+6",                 "command": "-workbench.action.openEditorAtIndex6" },
    { "key": "alt+7",                 "command": "-workbench.action.openEditorAtIndex7" },
    { "key": "alt+8",                 "command": "-workbench.action.openEditorAtIndex8" },
    { "key": "alt+9",                 "command": "-workbench.action.openEditorAtIndex9" },
    { "key": "alt+0",                 "command": "-workbench.action.lastEditorInGroup" },
    { "key": "ctrl+\\",               "command": "workbench.action.splitEditor" },
    { "key": "alt+\\",         "command": "workbench.action.splitEditorOrthogonal" },
    {
        "key": "ctrl+s",
        "mac": "cmd+s",
        "command": "workbench.action.files.save",
        "intellij": "Save"
    },
    {
        "key": "ctrl+alt+y",
        "mac": "cmd+alt+y",
        "command": "workbench.action.sync",
        "intellij": "Synchronize"
    },
    {
        "key": "ctrl+shift+f12",
        "mac": "cmd+shift+f12",
        "command": "workbench.action.maximizeEditor",
        "intellij": "Toggle maximizing editor",
        "todo": "toggle not working"
    },
/*
    {
        "key": "alt+shift+i",
        "mac": "alt+shift+i",
        "command": "",
        "intellij": "Inspect current file with current profile",
        "todo": "N/A"
    },
*/
    // {
    //     "key": "ctrl+`",
    //     "mac": "ctrl+`",
    //     "command": "workbench.action.selectTheme",
    //     "intellij": "Quick switch current scheme"
    // },
    {
        "key": "ctrl+shift+,",
        "mac": "cmd+numpad_separator",
        "command": "workbench.action.openSettings",
        "intellij": "Open Settings dialog"
    },
    {
        "key": "ctrl+q",
        "mac": "shift+cmd+a",
        "command": "workbench.action.showCommands",
        "intellij": "Find Action"
    },
    {
        "key": "ctrl+tab",
        "mac": "ctrl+tab",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen",
        "intellij": "Switch between tabs and tool window"
    },
    /*---------------------------------------------------------------*\
        * Custom
    \*---------------------------------------------------------------*/
    {
        "key": "alt+s",
        "command": "workbench.action.toggleSidebarVisibility",
    },
    {
        "key": "alt+a",
        "command": "workbench.action.toggleActivityBarVisibility",
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus",
    },
    {
        "key": "alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+numpad4",
        "command": "editor.debug.action.runToCursor",
        "when": "inDebugMode",
    },
    {
        "key": "ctrl+numpad5",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+numpad8",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f11",
        "command": "-workbench.action.debug.stepInto",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+numpad9",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+numpad7",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    // {
    //     "key": "shift+f5",
    //     "command": "-cmake.launchTarget"
    // },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+.",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+,",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+]",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+]",
        "mac": "alt+up",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus",
        "intellij": "Select successively increasing code blocks"
    },
    {
        "key": "ctrl+shift+[",
        "mac": "alt+down",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus",
        "intellij": "Decrease current selection to previous state"
    },
    {
        "key": "alt+`",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "alt+`",
        "command": "list.collapseAll",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+escape",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "alt+escape",
        "command": "list.collapseAll",
        "when": "listFocus && !inputFocus"
    },
    {   "key": "alt+q",
        "command": "workbench.action.terminal.toggleTerminal"
        // "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.terminal.new",
    },
    {
        "key": "ctrl+t",
        "when": "!terminalFocus",
        "command": "workbench.action.terminal.newWithCwd",
        "args": { "cwd": "${workspaceFolder}" }
    },
    {
        "key": "ctrl+t",
        "when": "terminalFocus",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "cd ${fileDirname}\u000D" }
    },
    {
        "key": "ctrl+enter",
        "when": "terminalFocus",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "${file} " }
    },
    {
        "key": "ctrl+shift+enter",
        "when": "terminalFocus",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "${fileDirname} " }
    },
    {
        "key": "ctrl+shift+g",
        "when": "terminalFocus",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "git gui & disown\u000D" }
    },
    {
        "key": "ctrl+shift+g",
        "when": "!terminalFocus",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "git -C ${fileDirname} gui & disown\u000D" }
    },
    {
        "key": "alt+g",
        "when": "terminalFocus",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "gitk --all -n100000 & disown\u000D" }
    },
    {
        "key": "alt+g",
        "when": "!terminalFocus",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "bash -c 'cd ${fileDirname};gitk --all -n100000' & disown\u000D" }
    },
    {
        "key": "alt+shift+g",
        "command": "workbench.action.terminal.sendSequence",
        "args": { "text": "bash -c 'cd ${fileDirname};gitk ${file}' & disown\u000D" }
    },
    {   "key": "ctrl+shift+r",
        "command": "workbench.action.reloadWindow"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "f4",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+f4",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
]
